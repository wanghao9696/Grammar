使用Scanner类实现键盘录入功能：
    1. 导包
        import java.util.Scanner;
    2. 创建对象
        Scanner sc = new Scanner(System.in);
    3. 接收数据
        int x = sc.nextInt();

使用Random类获取随机数：
    1. 导包
        import java.util.Random
    2. 创建对象
        Random r = new Random()
    3. 获取随机数
        int num = r.nextInt(10) // 获取0-10中的随机数，包含0不包含10

Java程序的内存分配：
    方法区：存储可运行的class文件，包含方法，静态成员，常量等
    栈：方法运行时使用的内存，特点是"后进先出"，即最先进入栈区的方法最后出栈，比如main方法
    堆：存储new出来的数组或对象
    本地方法栈：JVM在调用操作系统功能时使用，与开发无关
    寄存器：CPU使用，与开发无关
数组类型：
    变量arr存储的时数组在堆内存中的地址值，而不是数组元素的值，变量arr通过内存地址引用堆内存中的数组，所以数组时引用类型
数组的初始化：
    1. 在内存中为数组开辟连续空间; 2. 为每个元素赋值
    动态初始化：直指定长度，由系统给出默认值
    静态初始化：给出初始化值，由系统决定数组长度

数组定义的三种格式:
    int[] arr1 = new int[5];
    int[] arr2 = new int[]{1, 2, 3};
    int[] arr3 = {1, 2, 3};
数组长度：
    arr1.length
数组遍历：
    for (int i = 0; i < arr1.length; i++) {...}

基本类型的变量作为参数传递给方法时，传递的是值； // 相当于把值复制了一份，在方法中对参数操作不会影响原参数
引用类型的变量作为参数传递给方法时，传递的是地址； // 在方法中对参数操作会影响到原参数